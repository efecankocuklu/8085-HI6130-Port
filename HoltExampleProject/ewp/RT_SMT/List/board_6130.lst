###############################################################################
#                                                                             #
#                                                       04/Jun/2012  08:39:02 #
# IAR ANSI C/C++ Compiler V6.21.1.32794/W32 KICKSTART for ARM                 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Program Files\IAR Systems\Embedded Workbench 6.0      #
#                    Kickstart_2\arm\examples\Atmel\at91sam3u-ek\_Holt        #
#                    HI-6130-40 EBI Demo 1_0\board_6130.c                     #
#    Command line =  "C:\Program Files\IAR Systems\Embedded Workbench 6.0     #
#                    Kickstart_2\arm\examples\Atmel\at91sam3u-ek\_Holt        #
#                    HI-6130-40 EBI Demo 1_0\board_6130.c" -D at91sam3u4 -D   #
#                    flash -D TRACE_LEVEL=4 -D BC_ena=0 -D RT2_ena=1 -D       #
#                    RT1_ena=1 -D SMT_ena=1 -D IMT_ena=0 -lC "C:\Program      #
#                    Files\IAR Systems\Embedded Workbench 6.0                 #
#                    Kickstart_2\arm\examples\Atmel\at91sam3u-ek\_Holt        #
#                    HI-6130-40 EBI Demo 1_0\ewp\RT_SMT\List\" --remarks      #
#                    --diag_suppress Pe826,Pe1375,Pe068 -o "C:\Program        #
#                    Files\IAR Systems\Embedded Workbench 6.0                 #
#                    Kickstart_2\arm\examples\Atmel\at91sam3u-ek\_Holt        #
#                    HI-6130-40 EBI Demo 1_0\ewp\RT_SMT\Obj\" --no_cse        #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --no_clustering --no_scheduling --debug --endian=little  #
#                    --cpu=Cortex-M3 -e --fpu=None --dlib_config "C:\Program  #
#                    Files\IAR Systems\Embedded Workbench 6.0                 #
#                    Kickstart_2\arm\INC\c\DLib_Config_Full.h" -I             #
#                    "C:\Program Files\IAR Systems\Embedded Workbench 6.0     #
#                    Kickstart_2\arm\examples\Atmel\at91sam3u-ek\_Holt        #
#                    HI-6130-40 EBI Demo 1_0\ewp\..\..\..\at91lib/peripherals #
#                    \" -I "C:\Program Files\IAR Systems\Embedded Workbench   #
#                    6.0 Kickstart_2\arm\examples\Atmel\at91sam3u-ek\_Holt    #
#                    HI-6130-40 EBI Demo 1_0\ewp\..\..\..\at91lib/components\ #
#                    " -I "C:\Program Files\IAR Systems\Embedded Workbench    #
#                    6.0 Kickstart_2\arm\examples\Atmel\at91sam3u-ek\_Holt    #
#                    HI-6130-40 EBI Demo 1_0\ewp\..\..\..\at91lib\" -I        #
#                    "C:\Program Files\IAR Systems\Embedded Workbench 6.0     #
#                    Kickstart_2\arm\examples\Atmel\at91sam3u-ek\_Holt        #
#                    HI-6130-40 EBI Demo 1_0\ewp\..\..\..\external_libs\" -I  #
#                    "C:\Program Files\IAR Systems\Embedded Workbench 6.0     #
#                    Kickstart_2\arm\examples\Atmel\at91sam3u-ek\_Holt        #
#                    HI-6130-40 EBI Demo 1_0\ewp\..\..\..\at91lib/boards/at91 #
#                    sam3u-ek\" --cpu_mode thumb -On --use_c++_inline         #
#    List file    =  C:\Program Files\IAR Systems\Embedded Workbench 6.0      #
#                    Kickstart_2\arm\examples\Atmel\at91sam3u-ek\_Holt        #
#                    HI-6130-40 EBI Demo 1_0\ewp\RT_SMT\List\board_6130.lst   #
#    Object file  =  C:\Program Files\IAR Systems\Embedded Workbench 6.0      #
#                    Kickstart_2\arm\examples\Atmel\at91sam3u-ek\_Holt        #
#                    HI-6130-40 EBI Demo 1_0\ewp\RT_SMT\Obj\board_6130.o      #
#                                                                             #
#                                                                             #
###############################################################################

C:\Program Files\IAR Systems\Embedded Workbench 6.0 Kickstart_2\arm\examples\Atmel\at91sam3u-ek\_Holt HI-6130-40 EBI Demo 1_0\board_6130.c
      1          /* ----------------------------------------------------------------------------
      2           *                            HOLT Integrated Circuits 
      3           * ----------------------------------------------------------------------------
      4           *
      5           *    file	board_6130.h
      6           *    brief     This file contains ARM Cortex M3 hardware initialization for
      7           *              the processor's External Bus Interface (EBI) for Holt HI-6130 
      8           *              projects. (Not used for HI-6131 projects.)
      9           *
     10           *		IMPORTANT: Edit file 613x_initialization.h to define either:
     11           *
     12           *		HOST_BUS_INTERFACE  YES  sets compilation for HI-6130 (bus)
     13           *		 		    NO   sets compilation for HI-6131 (SPI)
     14           *
     15           *		Most functional procedures in this project are written for
     16           *		both parallel bus or SPI host interface schemes, this runtime 
     17           *		switch determines which are procedures are compiled.
     18           *
     19           *              IMPORTANT: Because register addressing differs for Bus and 
     20           *              SPI interface, files "device_6130.h" and "device_6131.h" 
     21           *              contain the definitions needed for register addressing.
     22           *
     23           *	   	HOLT DISCLAIMER
     24           *      	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY 
     25           *      	KIND, EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
     26           *      	WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
     27           *      	PURPOSE AND NONINFRINGEMENT. 
     28           *      	IN NO EVENT SHALL HOLT, INC BE LIABLE FOR ANY CLAIM, DAMAGES
     29           *      	OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR 
     30           *      	OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE 
     31           *      	SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. 
     32           *
     33           *              Copyright (C) 2009-2011 by  HOLT, Inc.
     34           *              All Rights Reserved
     35           */
     36          
     37          
     38          // standard Atmel/IAR headers
     39          #include <pio/pio.h>
     40          #include <pmc/pmc.h>
     41          
     42          // Holt project headers
     43          #include "device_6130.h"
     44          #include "board_6130.h"
     45          #include "613x_initialization.h"
     46          
     47          
     48          extern const H6130 pH6130;
     49          
     50          
     51          //------------------------------------------------------------------------------
     52          // This function initializes and configures the HI-6130 External Bus Interface
     53          //------------------------------------------------------------------------------
     54          // based on Atmel function BOARD_ConfigurePsram(), this function sets up the
     55          // external bus interface (EBI) and the characteristic for the /CS0 chip select
     56          // used by the Holt HI-6130. Changes to Atmel version: [a] Output address range was 
     57          // reduced to 64K bytes (32K words) to free-up upper address output pins for use
     58          // as ordinary GPIO, [b] header file definition deletes output pin connection for
     59          // byte-select outputs used for 8-bit external bus or byte-addressed (e.g flash) 
     60          // memories (still used for internal flash access), and [c] enabled the NWAIT input...

   \                                 In section .text, align 4, keep-with-next
     61          void Configure_ARM_MCU_ExtBus(void) 
     62          {
   \                     Configure_ARM_MCU_ExtBus:
   \   00000000   10B5               PUSH     {R4,LR}
   \   00000002   C8B0               SUB      SP,SP,#+288
     63              const Pin pin6130[] = {PINS_EBI_6130};
   \   00000004   00A8               ADD      R0,SP,#+0
   \   00000006   1249               LDR.N    R1,??Configure_ARM_MCU_ExtBus_0
   \   00000008   4FF49072           MOV      R2,#+288
   \   0000000C   ........           BL       __aeabi_memcpy4
     64              unsigned int tmp;
     65          
     66              // Open EBI clock
     67              AT91C_BASE_PMC->PMC_PCER = (1<< AT91C_ID_HSMC4);
   \   00000010   1048               LDR.N    R0,??Configure_ARM_MCU_ExtBus_0+0x4  ;; 0x400e0410
   \   00000012   4FF40071           MOV      R1,#+512
   \   00000016   0160               STR      R1,[R0, #+0]
     68          
     69              // Configure I/O
     70              PIO_Configure(pin6130, PIO_LISTSIZE(pin6130));
   \   00000018   0921               MOVS     R1,#+9
   \   0000001A   00A8               ADD      R0,SP,#+0
   \   0000001C   ........           BL       PIO_Configure
     71          
     72              // Setup the HI-6130 bus (HSMC4_EBI.CS0, 0x60000000 ~ 0x6000FFFF)
     73              AT91C_BASE_HSMC4_CS0->HSMC4_SETUP = 0
     74                                  | ((1 <<  0) & AT91C_HSMC4_NWE_SETUP)    // 6130 0ns min [A]
     75                                  | ((1 <<  8) & AT91C_HSMC4_NCS_WR_SETUP) // 6130 0ns min 
     76                                  | ((1 << 16) & AT91C_HSMC4_NRD_SETUP)    // 6130 0ns min 
     77                                  | ((1 << 24) & AT91C_HSMC4_NCS_RD_SETUP) // 6130 0ns min 
     78                                  ;
   \   00000020   0D48               LDR.N    R0,??Configure_ARM_MCU_ExtBus_0+0x8  ;; 0x400e0070
   \   00000022   5FF00131           MOVS     R1,#+16843009
   \   00000026   0160               STR      R1,[R0, #+0]
     79              AT91C_BASE_HSMC4_CS0->HSMC4_PULSE = 0
     80                                  | ((5 <<  0) & AT91C_HSMC4_NWE_PULSE)    // 6130 55ns min [B]
     81                                  | ((5 <<  8) & AT91C_HSMC4_NCS_WR_PULSE) // 6130 55ns min
     82                                  | ((6 << 16) & AT91C_HSMC4_NRD_PULSE)    // 6130 65ns min
     83                                  | ((6 << 24) & AT91C_HSMC4_NCS_RD_PULSE)
     84                                  ;
   \   00000028   0C48               LDR.N    R0,??Configure_ARM_MCU_ExtBus_0+0xC  ;; 0x400e0074
   \   0000002A   0D49               LDR.N    R1,??Configure_ARM_MCU_ExtBus_0+0x10  ;; 0x6060505
   \   0000002C   0160               STR      R1,[R0, #+0]
     85              AT91C_BASE_HSMC4_CS0->HSMC4_CYCLE = 0
     86                                  | ((6 <<  0) & AT91C_HSMC4_NWE_CYCLE)    // [A]+[B]
     87                                  | ((7 << 16) & AT91C_HSMC4_NRD_CYCLE)
     88                                  ;
   \   0000002E   0D48               LDR.N    R0,??Configure_ARM_MCU_ExtBus_0+0x14  ;; 0x400e0078
   \   00000030   0D49               LDR.N    R1,??Configure_ARM_MCU_ExtBus_0+0x18  ;; 0x70006
   \   00000032   0160               STR      R1,[R0, #+0]
     89          
     90              tmp = AT91C_BASE_HSMC4_CS0->HSMC4_MODE & ~(AT91C_HSMC4_DBW);
   \   00000034   0D48               LDR.N    R0,??Configure_ARM_MCU_ExtBus_0+0x1C  ;; 0x400e0080
   \   00000036   0068               LDR      R0,[R0, #+0]
   \   00000038   30F44050           BICS     R0,R0,#0x3000
   \   0000003C   0400               MOVS     R4,R0
     91              AT91C_BASE_HSMC4_CS0->HSMC4_MODE = tmp
     92                                  | (AT91C_HSMC4_READ_MODE)  // read cycle controlled by NRD, not NCSx
     93                                  | (AT91C_HSMC4_WRITE_MODE) // write cycle controlled by NWE, not NCSx
     94                                  | (AT91C_HSMC4_BAT_BYTE_SELECT)
     95                                  | (AT91C_HSMC4_DBW_WIDTH_SIXTEEN_BITS)
     96                                  ;
   \   0000003E   44F48050           ORR      R0,R4,#0x1000
   \   00000042   50F00300           ORRS     R0,R0,#0x3
   \   00000046   0949               LDR.N    R1,??Configure_ARM_MCU_ExtBus_0+0x1C  ;; 0x400e0080
   \   00000048   0860               STR      R0,[R1, #+0]
     97                              //  | ((1 << 16) & AT91C_HSMC4_TDF_MODE) // 1 cycle data float enabled
     98                              //  | (AT91C_HSMC4_EXNW_MODE_NWAIT_ENABLE_READY) // NWAIT enabled
     99                              //  ;
    100          }
   \   0000004A   48B0               ADD      SP,SP,#+288
   \   0000004C   10BD               POP      {R4,PC}          ;; return
   \   0000004E   00BF               Nop      
   \                     ??Configure_ARM_MCU_ExtBus_0:
   \   00000050   ........           DC32     `?<Constant {{4261543424, (AT91S_PIO *)10746629`
   \   00000054   10040E40           DC32     0x400e0410
   \   00000058   70000E40           DC32     0x400e0070
   \   0000005C   74000E40           DC32     0x400e0074
   \   00000060   05050606           DC32     0x6060505
   \   00000064   78000E40           DC32     0x400e0078
   \   00000068   06000700           DC32     0x70006
   \   0000006C   80000E40           DC32     0x400e0080

   \                                 In section .rodata, align 4
   \                     `?<Constant {{4261543424, (AT91S_PIO *)10746629`:
   \   00000000   00FE01FE000E       DC32 4261543424, 400E0E00H
   \              0E40        
   \   00000008   0B0000000000       DC8 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \   0000001A   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000020   40000000000E       DC32 64, 400E0E00H
   \              0E40        
   \   00000028   0B0100000000       DC8 11, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \   0000003A   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000040   00001000000E       DC32 1048576, 400E0E00H
   \              0E40        
   \   00000048   0B0001000000       DC8 11, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00          
   \   0000005B   0000000000         DC8 0, 0, 0, 0, 0
   \   00000060   00000800000E       DC32 524288, 400E0E00H
   \              0E40        
   \   00000068   0B0001000000       DC8 11, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00          
   \   0000007B   0000000000         DC8 0, 0, 0, 0, 0
   \   00000080   00008000000E       DC32 8388608, 400E0E00H
   \              0E40        
   \   00000088   0B0001000000       DC8 11, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00          
   \   0000009B   0000000000         DC8 0, 0, 0, 0, 0
   \   000000A0   000004000010       DC32 262144, 400E1000H
   \              0E40        
   \   000000A8   0C0001000000       DC8 12, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00          
   \   000000BB   0000000000         DC8 0, 0, 0, 0, 0
   \   000000C0   FF0F30000010       DC32 3149823, 400E1000H
   \              0E40        
   \   000000C8   0C0001000000       DC8 12, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00          
   \   000000DB   0000000000         DC8 0, 0, 0, 0, 0
   \   000000E0   00010000000E       DC32 256, 400E0E00H
   \              0E40        
   \   000000E8   0B0101000000       DC8 11, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00          
   \   000000FB   0000000000         DC8 0, 0, 0, 0, 0
   \   00000100   80000000000E       DC32 128, 400E0E00H
   \              0E40        
   \   00000108   0B0101000000       DC8 11, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              00          
   \   0000011B   0000000000         DC8 0, 0, 0, 0, 0
    101          
    102          
    103          // end of file
    104          

   Maximum stack usage in bytes:

     Function                 .cstack
     --------                 -------
     Configure_ARM_MCU_ExtBus    296


   Section sizes:

     Function/Label                                 Bytes
     --------------                                 -----
     Configure_ARM_MCU_ExtBus                        112
     ?<Constant {{4261543424, (AT91S_PIO *)10746629  288

 
 288 bytes in section .rodata
 112 bytes in section .text
 
 112 bytes of CODE  memory
 288 bytes of CONST memory

Errors: none
Warnings: none
